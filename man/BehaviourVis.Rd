% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BehaviourVis.R
\name{BehaviourVis}
\alias{BehaviourVis}
\title{Visualise behavioural states via coloured bounding boxes}
\usage{
BehaviourVis(
  detections_path,
  vid_path,
  output_path,
  classification_function = NULL,
  class_column,
  ...
)
}
\arguments{
\item{detections_path}{Path to an AnimalTrackR detection file}

\item{vid_path}{Path to the video file corresponding to the detections file}

\item{output_path}{File path at which to save the output visualisation (MP4 format)}

\item{classification_function}{A custom function to classify detections into
behavioural states for visualisation.

The function may have as many inputs as needed, however, one must be
\code{detections}, taking an R dataframe corresponding to an AnimalTrackR detection
file. For testing purposes, the dataframe is read internally using
\code{data.table::fread(detections_path)}.

The output of the \code{classification_function} should be a dataframe of the same
format as the input dataframe but with additional columns. One of these
should be a categorical column representing the behavioural state. Up to 10
behavioural states are supported. The name of this categorical column must
be specified in the \code{class_column} parameter.

Optionally, if the saved detection file has already been classified this
parameter can be ignored and the the column name can be specified in the
\code{class_column} parameter.

You must ensure that all dependencies required by the classification function
are loaded into your R session.}

\item{class_column}{character string. The name of the column in the detections
dataframe containing the behavioural states (either as an output of the
\code{classification_function} or a previously computed column saved in the
specified csv file)}

\item{...}{Additional paramters to be passed to the \code{classification_function}}
}
\value{
invisibly returns T if the video has been successfully exported
}
\description{
Using a custom classification function, classify detections into behavioural
states and visualise these states in the original video via coloured bounding
boxes representing each detection.

This is a useful tool for validating behavioural state classifications
}
\examples{
\dontrun{

  classifier <- function(detection){
    # Custom classification function
    # e.g. assign points to clusters
  }

  BehaviourVis(
    detections_path = "path/to/TrackRDetections.csv",
    vid_path = "path/to/video",
    output_path = "path/to/save/output/mp4",
    classification_function = classifier
  )
}

}
